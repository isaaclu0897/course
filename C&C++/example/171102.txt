lec7_examples
//---------------------------------------------------------
//EX1: 開根號
#include <stdio.h>

double abs0(double x)
{
return (x>0) ? x : -x;
}
double sqrt0(double x, double guess)
{
printf("%.12f %.12f\n", x, guess);
if (abs0(guess*guess - x) < 0.00000001) return guess;
else {
return sqrt0(x, 0.5*(guess+(x/guess)) );
}
}

int main(void)
{
double num,guess;
printf("Enter the number & its guess\n");
scanf("%lf %lf",&num,&guess);
printf("%.12f\n", sqrt0(num, guess)); // num=x=y^2 guess=your guess about y(i.e sqrt(x)) =z
return 0;
}

//---------------------------------------------------------
//EX2: prefix to infix
#include <stdio.h>
#include <ctype.h>

int calculate(void);

int main(void)
{
printf("Enter the prefix expression:\n");
printf("= %d\n", calculate());
return 0;
}

int calculate(void)
{
int c;
int ans;
int op1, op2;

c = getchar();
if (isspace(c)) {
ans = calculate();
} else if (c=='+') {
printf("(");
op1 = calculate();
printf("+");
op2 = calculate();
printf(")");
ans = op1 + op2;
} else if (c=='-') {
printf("(");
op1 = calculate();
printf("-");
op2 = calculate();
printf(")");
ans = op1 - op2;
} else if (c=='*') {
printf("(");
op1 = calculate();
printf("*");
op2 = calculate();
printf(")");
ans = op1 * op2;
} else if (isdigit(c)) {
ungetc(c, stdin);
scanf("%d", &ans);
printf("%d",ans);
}

return ans;

}


//---------------------------------------------------------
//EX3:以&取得變數位址
#include <stdio.h>

int main(void)
{
int x;
printf("Enter an integer: ");
scanf("%d",&x);
printf("x = %d\n", x);
printf("address of x = %p",&x); //output 32-bit address
return 0;
}


//---------------------------------------------------------
//EX4:指標變數
#include <stdio.h>

int main(void)
{
int x;
printf("Enter an integer: ");
scanf("%d",&x);
printf("x = %d\n", x);
printf("address of x = %p\n",&x); //output 32-bit address
int* z;
z = &x;
printf("address of x = %p\n",z);
printf("integer pointed by z = %d\n",*z);
return 0;
}

//---------------------------------------------------------
//EX5-1:非法的指標 (有warning: z is uninitiazed)
#include <stdio.h>

int main(void)
{
int* z;
*z = 100;
printf("int pointed by z = %d\n",*z);
return 0;
}

//EX5-2:非法的指標 (有warning)
#include <stdio.h>

int main(void)
{
int* z;
z = 10011001;
printf("z = %p\n",z);
return 0;
}


//---------------------------------------------------------
//EX6: 合法的指標
#include <stdio.h>

int main(void)
{
int x = 17;
int* ad_x = &x;
double y = 1.2345;
double* ad_y = &y;

printf("x: %d\n", x);
printf("y: %f\n", y);
printf("address of x: %p size of address of x:%u size of x:%u\n",ad_x,sizeof(ad_x),sizeof(x));
printf("address of y: %p size of address of y:%u size of y:%u\n",ad_y,sizeof(ad_y),sizeof(y));

return 0;
}

//---------------------------------------------------------
//EX7-1: Swap 2 integers (做白工版本)
#include <stdio.h>

int swap(int x, int y)
{
int temp;
temp = x;
x = y;
y = temp;
return 0;
}

int main(void)
{
int x = 17;
int y = 23;

printf("x: %d y: %d\n",x,y);
swap(x,y);
printf("x: %d y: %d\n",x,y);

return 0;
}


//EX7-2: Swap 2 integers (正確版本)
#include <stdio.h>

int swap(int* a, int* b) // use different names to help students see more clearly the relationship
{ // teach how to quickly verify the validity of parameters transformation
int temp; // input: &x ==> assgin to a ==> *&x = x = *a
temp = *a;
*a = *b;
*b = temp;
return 0;
}

int main(void)
{
int x = 17;
int y = 23;

printf("x: %d y: %d\n",x,y);
swap(&x,&y);
printf("x: %d y: %d\n",x,y);

return 0;
}

//---------------------------------------------------------
//EX8: 觀察array位址
#include <stdio.h>
int main(void)
{
int a[10];
int i;

for(i=0;i<=9;i++) a[i] = i;
for(i=0;i<=9;i++)
printf("a[%d] value:%d address:%p\n",i,a[i],&a[i]);
//1個int佔4bytes==>各element間位址亦差4(bytes)
//可將 int a[10] 改為 double a[10] ==> check if 各element間位址差8(bytes)

printf("address of array name: %p\n",a);

return 0;
}

//---------------------------------------------------------
//EX9:觀察等價關係
#include <stdio.h>
int main(void)
{
double a[10];
int i;

for(i=0;i<=9;i++) a[i] = i*1.0;

printf("address of a :%p\n",a);
printf("address of a[0] :%p\n",&a[0]); // see &a[0] == a
printf("address of a[1] :%p\n",&a[1]); // see 1 double variable occupies 8 bytes
printf("address of a+1 :%p\n",a+1); // see &a[1] == a+1
printf("value of a[1] :%f\n",a[1]); 
printf("value of *(a+1):%f\n",*(a+1)); // see a[1] == *(a+1)

printf("\ni a[i] *(a+i) i[a]\n");
for(i=0;i<=9;i++) 
printf("a[%d] %f %f %f\n",i,a[i],*(a+i),i[a]);

return 0;
}


